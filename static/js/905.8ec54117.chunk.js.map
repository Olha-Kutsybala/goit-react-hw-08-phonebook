{"version":3,"file":"static/js/905.8ec54117.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","hooks/useContacts.js","webpack://react-homework-template/./src/components/form/Form.module.css?1d3b","components/form/index.js","components/form/Form.jsx","webpack://react-homework-template/./src/components/contactList/ContactList.module.css?7e3b","components/contactList/index.js","components/contactList/ContactList.jsx","webpack://react-homework-template/./src/components/filter/filter.module.css?56b3","components/filter/filter.jsx","components/filter/index.js","webpack://react-homework-template/./src/pages/Contacts/contacts.module.css?eff6","pages/Contacts/contacts.js"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const getFilteredContact = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectFilter,\n  getFilteredContact,\n} from 'redux/selectors';\nimport * as contactsOperations from 'redux/contacts/contactOperations';\nimport * as filterActions from 'redux/filter/filterSlice';\nimport { useCallback } from 'react';\n\nexport const useContacts = () => {\n  const contacts = useSelector(selectContacts);\n  const filteredContacts = useSelector(getFilteredContact);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const fetchContacts = useCallback(() => {\n    dispatch(contactsOperations.fetchContacts());\n  }, [dispatch]);\n\n  const addContact = newContact => {\n    dispatch(contactsOperations.addContact(newContact));\n  };\n\n  const removeContact = id => {\n    dispatch(contactsOperations.removeContact(id));\n  };\n\n  const setFilter = filter => {\n    dispatch(filterActions.setFilter(filter));\n  };\n\n  return {\n    filter,\n    contacts,\n    filteredContacts,\n    addContact,\n    setFilter,\n    removeContact,\n    fetchContacts,\n  };\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__gjyi8\",\"label\":\"Form_label__2sM9O\",\"input\":\"Form_input__9y3wg\",\"form_button\":\"Form_form_button__Fru8C\"};","import Form from './Form';\n\nexport default Form;\n","import css from './Form.module.css';\nimport { useState } from 'react';\nimport toast from 'react-hot-toast';\nimport { useContacts } from 'hooks/useContacts';\n\nconst Form = () => {\n  const { contacts, addContact } = useContacts();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (name.trim() === '' || number.trim() === '') {\n      alert(\"Enter the contact's name and number phone!\");\n      return;\n    }\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isExist) {\n      toast.error(`${number} is already in contacts.`);\n      return;\n    }\n\n    addContact({ name, number });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <div className={css.form}>\n      <form onSubmit={handleSubmit}>\n        <label htmlFor=\"name\" className={css.label}>\n          Name\n        </label>\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          minLength={2}\n          onChange={handleChange}\n          value={name}\n          placeholder=\"Enter here\"\n          className={css.input}\n        />\n\n        <label htmlFor=\"number\" className={css.label}>\n          Number\n        </label>\n\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n          placeholder=\"111-11-11\"\n          className={css.input}\n        />\n\n        <button type=\"submit\" className={css.form_button}>\n          Add contact\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"ContactList_contactList__+SpO1\",\"contactItem\":\"ContactList_contactItem__1JJfT\",\"contactInfo\":\"ContactList_contactInfo__-d7UO\",\"contactDeleteBtn\":\"ContactList_contactDeleteBtn__sSGtC\"};","import ContactList from './ContactList';\n\nexport default ContactList;\n","import css from './ContactList.module.css';\nimport { useContacts } from 'hooks/useContacts';\n\nconst ContactList = () => {\n  const { filteredContacts, removeContact } = useContacts();\n\n  return (\n    <>\n      <ul className={css.contactList}>\n        {filteredContacts.map(contact => (\n          <li className={css.contactItem} key={contact.id}>\n            <p className={css.contactInfo}>\n              {contact.name}: {contact.number}\n            </p>\n            <button\n              className={css.contactDeleteBtn}\n              type=\"button\"\n              onClick={() => {\n                removeContact(contact.id);\n              }}\n            >\n              x\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter_container\":\"filter_filter_container__zWT9u\",\"label_filter\":\"filter_label_filter__VwiOX\",\"input_filter\":\"filter_input_filter__VyUGQ\"};","import css from './filter.module.css';\nimport { useContacts } from 'hooks/useContacts';\n\nfunction Filter() {\n  const { filter, setFilter } = useContacts();\n\n  return (\n    <div className={css.filter_container}>\n      <label className={css.label_filter} htmlFor=\"filter\">\n        Filter\n      </label>\n      <input\n        name=\"filter\"\n        type=\"text\"\n        value={filter}\n        onChange={evt => setFilter(evt.target.value)}\n        className={css.input_filter}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import Filter from './filter';\n\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"contacts\":\"contacts_contacts__5vgHR\",\"contacts_title\":\"contacts_contacts_title__M-Wt-\"};","import { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { useContacts } from 'hooks/useContacts';\nimport Form from 'components/form';\nimport ContactList from 'components/contactList';\nimport Filter from 'components/filter';\nimport css from './contacts.module.css';\n\nexport default function Contacts() {\n  const { contacts, fetchContacts } = useContacts();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    fetchContacts();\n  }, [fetchContacts]);\n\n  return (\n    <div className={css.contacts}>\n      <h1 className={css.contacts_title}>Your contacts!</h1>\n      <Form />\n      {isLoading && !error && <b>Request in progress...</b>}\n      {contacts.length >= 1 && <Filter />}\n      {contacts.length > 0 ? (\n        <ContactList />\n      ) : (\n        <p>Your phonebook is empty. Please add contact.</p>\n      )}\n    </div>\n  );\n}\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","getFilteredContact","normalizedFilter","toLowerCase","includes","useContacts","useSelector","filteredContacts","dispatch","useDispatch","addContact","newContact","contactsOperations","setFilter","filterActions","removeContact","id","fetchContacts","useCallback","useState","setName","number","setNumber","handleChange","e","target","reset","className","css","onSubmit","event","preventDefault","trim","contact","toast","alert","htmlFor","type","pattern","title","required","minLength","onChange","placeholder","onClick","evt","Contacts","useEffect"],"sourceRoot":""}